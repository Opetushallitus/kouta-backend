name: Kouta-backend

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Helsinki"

      - name: Start postgres container
        run: |
          cd kouta-backend/postgresql/docker
          docker build --tag kouta-postgres .
          docker pull localstack/localstack:0.10.2

      - name: Build with Maven
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          set -euo pipefail
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          mvn clean package -B

      - name: Build Docker container
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          set -euo pipefail
          export ARTIFACT_NAME="kouta-backend"
          source ci-tools/common/setup-tools.sh
          mv kouta-backend/target/kouta-backend-*-jar-with-dependencies.jar $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar
          cp -vr kouta-backend/src/main/resources/* $DOCKER_BUILD_DIR/config/
          export BASE_IMAGE="baseimage-fatjar-openjdk11:master"
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME

